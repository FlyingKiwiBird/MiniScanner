<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="imageGroups" type="System.Configuration.NameValueSectionHandler" />
    <section name="imageItems" type="System.Configuration.NameValueSectionHandler" />
    <section name="imageNames" type="System.Configuration.NameValueSectionHandler" />
    <section name="shipTypes" type="System.Configuration.NameValueSectionHandler" />
    <section name="implementations" type="System.Configuration.NameValueSectionHandler" />
  </configSections>
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.0,Profile=Client"/>
  </startup>
  <shipTypes>
    <add key="Providence - Freighter - Amarr" value="PROVI" />
    <add key="Charon - Freighter - Caldari" value="CHARON" />
    <add key="Obelisk - Freighter - Gallente" value="OBELISK" />
    <add key="Fenrir - Freighter - Minmatar" value="FENRIR" />
    <add key="Ark - Jump Freighter - Amarr - Helium" value="ARK" />
    <add key="Rhea - Jump Freighter - Caldari - Nitrogen" value="RHEA" />
    <add key="Anshar - Jump Freighter - Gallente - Oxygen" value="ANSHAR" />
    <add key="Nomad - Jump Freighter - Minmatar - Hydrogen" value="NOMAD" />
    <add key="Orca - Industrial Command Ship" value="ORCA" />
    <add key="Bowhead - Freighter - ORE" value="BOWHEAD" />
  </shipTypes>
  <appSettings>
    <add key="appWidth" value="590" />
    <add key="appHeight" value="574" />
    <add key="windowPosX" value="-1" />
    <add key="windowPosY" value="-1" />
    <add key="showExtra" value="true" />
    <add key="CaptureClipboard" value="true" />
    <add key="alwaysOnTop" value="false" />
    <add key="KeepLocation" value="true" />
    <add key="debugLevel" value="results"/>
    <add key="logFile" value="evescanner.log"/>
    <add key="location1" value="Perimeter -> Urlen"/>
    <add key="location2" value="Ashab -> Madirmilire"/>
    <add key="location3" value="Hatakani -> Sivala"/>
  </appSettings>
  <connectionStrings>
    <add name="SQLiteScanHistory" connectionString="Data Source=ScanHistory.db;Version=3;" />
    <add name="SQLiteStaticDataProvider" connectionString="Data Source=c:\temp\scanner_sde.sqlite;Version=3;" />
    <add name="SQLiteExtraDataProvider" connectionString="Data Source=extradata.db;Version=3;" />
    <add name="ScanRules" connectionString="rules.xml" />
  </connectionStrings>
  <imageGroups>
  </imageGroups>
  <imageNames>
  </imageNames>
  <imageItems>
  </imageItems>
  <implementations>
    <!-- This section configures DEFAULT implementations. The others might be registered, but, this forces a default. -->
    
    <!-- API XML (Backed by Files) -->
    <add key="IAllianceXmlDataProvider" value="EveOnlineApi.FileBackedEveOnlineXmlApi, EveOnlineApi, Culture=neutral" />
    <add key="ICharacterXmlDataProvider" value="EveOnlineApi.FileBackedEveOnlineXmlApi, EveOnlineApi, Culture=neutral" />
    <add key="ICorporationXmlDataProvider" value="EveOnlineApi.FileBackedEveOnlineXmlApi, EveOnlineApi, Culture=neutral" />
    <add key="IContactListXmlDataProvider" value="EveOnlineApi.FileBackedEveOnlineXmlApi, EveOnlineApi, Culture=neutral" />

    <!-- API Usable (Pulls from XML APIs above) -->
    <add key="IAllianceDataProvider" value="EveOnlineApi.XmlBackedEveOnlineApi, EveOnlineApi, Culture=neutral" />
    <add key="ICharacterDataProvider" value="EveOnlineApi.XmlBackedEveOnlineApi, EveOnlineApi, Culture=neutral" />
    <add key="ICorporationDataProvider" value="EveOnlineApi.XmlBackedEveOnlineApi, EveOnlineApi, Culture=neutral" />
    <add key="IStandingsDataProvider" value="EveOnlineApi.XmlBackedEveOnlineApi, EveOnlineApi, Culture=neutral" />

    <!-- Images (Backed by Files) -->
    <add key="IImageDataProvider" value="EveOnlineApi.FileBackedImageDataProvider, EveOnlineApi, Culture=neutral" />

    <!-- Static Data Export (Backed by SQLite) -->
    <add key="IStaticDataExportProvider" value="EveScanner.SQLiteStorage.SQLiteStaticDataProvider, EveScanner.SQLiteStorage, Culture=neutral" />
    <add key="IStaticDataExportProvider" value="EveScanner.SQLiteStorage.SQLiteStaticDataProvider, EveScanner.SQLiteStorage, Culture=neutral" />
    <add key="IInventoryTypeProvider" value="EveScanner.SQLiteStorage.SQLiteStaticDataProvider, EveScanner.SQLiteStorage, Culture=neutral" />
    
    <!-- Extra Data (Backed by SQLite) -->
    <add key="IItemPriceProvider" value="EveScanner.SQLiteStorage.SQLiteExtraDataProvider, EveScanner.SQLiteStorage, Culture=neutral" />
    <add key="IInventoryRepackagedProvider" value="EveScanner.SQLiteStorage.SQLiteExtraDataProvider, EveScanner.SQLiteStorage, Culture=neutral" />
    
  </implementations>
</configuration>
